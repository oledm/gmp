# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-04-11 13:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Тип носителя')),
            ],
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Тип оборудования')),
                ('desc', models.CharField(max_length=150, verbose_name='Описание оборудования')),
                ('serial_number', models.CharField(max_length=50, verbose_name='Заводской номер')),
                ('scheme', models.CharField(max_length=50, verbose_name='Номер чертежа')),
                ('reg_number', models.CharField(max_length=50, verbose_name='Регистрационный номер')),
                ('inv_number', models.CharField(max_length=50, verbose_name='Инвентарный номер')),
                ('manufactured_year', models.PositiveSmallIntegerField(verbose_name='Год изготовления')),
                ('started_year', models.PositiveSmallIntegerField(verbose_name='Год ввода в эксплуатацию')),
                ('p_work', models.PositiveSmallIntegerField(verbose_name='Давление рабочее, МПа')),
                ('p_test', models.PositiveSmallIntegerField(verbose_name='Давление пробное, МПа')),
                ('temp_carrier', models.PositiveSmallIntegerField(verbose_name='Рабочая температура среды, ⁰С')),
                ('danger_class', models.PositiveSmallIntegerField(verbose_name='Класс опасности технологической среды по ГОСТ\xa012.1.007-76')),
                ('volume', models.PositiveSmallIntegerField(verbose_name='Объем рабочий, м3')),
                ('weight', models.PositiveSmallIntegerField(verbose_name='Масса сосуда (пустого), кг')),
                ('mode', models.CharField(max_length=50, verbose_name='Режим нагружения')),
                ('dimensions_width_ring', models.PositiveSmallIntegerField(verbose_name='Внутренний диаметр обечайки, мм')),
                ('dimensions_width_bottom', models.PositiveSmallIntegerField(verbose_name='Внутренний диаметр днища, мм')),
                ('dimensions_height_ring', models.PositiveSmallIntegerField(verbose_name='Высота обечайки, мм')),
                ('dimensions_height_bottom', models.PositiveSmallIntegerField(verbose_name='Высота днища, мм')),
                ('dimensions_height_total', models.PositiveSmallIntegerField(verbose_name='Высота сосуда (общая)')),
                ('dimensions_side_ring', models.PositiveSmallIntegerField(verbose_name='Толщина стенок обечайки (проектная), мм')),
                ('dimensions_side_bottom', models.PositiveSmallIntegerField(verbose_name='Толщина стенок днища (проектная), мм')),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='containers.Carrier', verbose_name='Технологическая среда')),
            ],
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Метод контроля при изготовлении')),
                ('area', models.CharField(max_length=150, verbose_name='Объем контроля при изготовлении')),
            ],
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Наименование завода')),
            ],
            options={
                'verbose_name_plural': 'Factories',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Наименование материала')),
            ],
        ),
        migrations.CreateModel(
            name='Welding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Вид сварки')),
                ('material', models.CharField(max_length=150, verbose_name='Материал сварки')),
            ],
        ),
        migrations.AddField(
            model_name='container',
            name='control',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='containers.Control', verbose_name='Контроль при изготовлении'),
        ),
        migrations.AddField(
            model_name='container',
            name='factory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='containers.Factory', verbose_name='Завод-изготовитель'),
        ),
        migrations.AddField(
            model_name='container',
            name='material_bottom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_bottom', to='containers.Material', verbose_name='Материал днища'),
        ),
        migrations.AddField(
            model_name='container',
            name='material_ring',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_ring', to='containers.Material', verbose_name='Материал обечайки'),
        ),
        migrations.AddField(
            model_name='container',
            name='welding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='containers.Welding', verbose_name='Сведения о сварке'),
        ),
    ]
